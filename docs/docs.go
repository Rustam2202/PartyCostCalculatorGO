// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/calcEvent": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calculate"
                ],
                "summary": "Calculate event data by Id",
                "parameters": [
                    {
                        "description": "Calculate Event Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/calculation.CalculateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.EventData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    }
                }
            }
        },
        "/event": {
            "put": {
                "description": "Update a event in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Update a event",
                "parameters": [
                    {
                        "description": "Update Event Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/events.UpdateEventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/events.UpdateEventRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new event to database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Add a event",
                "parameters": [
                    {
                        "description": "Add Event Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/events.AddEventRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.Event"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    }
                }
            }
        },
        "/event/{id}": {
            "get": {
                "description": "Get a event from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Get a event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Event"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a event from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "Delete a event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    }
                }
            }
        },
        "/persEvents": {
            "put": {
                "description": "Update a record of peson-event data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person-Event"
                ],
                "summary": "Update a person-event",
                "parameters": [
                    {
                        "description": "Update Person-Event Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/personsevents.UpdatePersonEventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/personsevents.UpdatePersonEventRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new record of peson existed in event to database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person-Event"
                ],
                "summary": "Add a person-event",
                "parameters": [
                    {
                        "description": "Add Person-Event Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/personsevents.AddPersonEventRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.PersonsAndEvents"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    }
                }
            }
        },
        "/persEvents/{event_id}": {
            "get": {
                "description": "Get an array of peson-event records by EventId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person-Event"
                ],
                "summary": "Get a persons-event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.PersonsAndEvents"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    }
                }
            }
        },
        "/persEvents/{id}": {
            "delete": {
                "description": "Delete a record of peson existed in event by Id from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person-Event"
                ],
                "summary": "Delete a person-event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    }
                }
            }
        },
        "/person": {
            "put": {
                "description": "Update a person in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Update a person",
                "parameters": [
                    {
                        "description": "Update Person Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/persons.UpdatePersonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/persons.UpdatePersonRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new person to database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Add a person",
                "parameters": [
                    {
                        "description": "Add Person Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/persons.AddPersonRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.Person"
                        }
                    },
                    "304": {
                        "description": "Not Modified",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    }
                }
            }
        },
        "/person/{id}": {
            "get": {
                "description": "Get a person from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Get a person",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Person Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Person"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    }
                }
            }
        },
        "/person/{id}": {
            "get": {
                "description": "Get a person from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Get a person",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Person Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Person"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a person from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Delete a person",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Person Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponce"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "calculation.CalculateRequest": {
            "type": "object",
            "properties": {
                "event_id": {
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
                    "type": "integer",
                    "default": 987654321
                },
                "round_rate": {
                    "type": "number",
                    "default": 1
<<<<<<< HEAD
=======
=======
                    "type": "integer"
                },
                "round": {
                    "type": "number"
>>>>>>> 9a4ae566fa2b8141fcb08531d73bacef0f5edb34
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
                }
            }
        },
        "domain.Event": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "default": "2020-12-31"
                },
                "id": {
                    "type": "integer",
                    "default": 987654321
                },
                "name": {
                    "type": "string",
                    "default": "Some Event name"
                },
                "persons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Person"
                    }
                }
            }
        },
        "domain.Person": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Event"
                    }
                },
                "id": {
                    "type": "integer",
                    "default": 123456789
                },
                "name": {
                    "type": "string",
                    "default": "Some Person name"
                }
            }
        },
        "domain.PersonsAndEvents": {
            "type": "object",
            "properties": {
                "event": {
                    "$ref": "#/definitions/domain.Event"
                },
                "event_id": {
                    "type": "integer",
                    "default": 987654321
                },
                "factor": {
                    "type": "integer",
                    "default": 1
                },
                "id": {
                    "type": "integer",
                    "default": 9223372036854775807
                },
                "person": {
                    "$ref": "#/definitions/domain.Person"
                },
                "person_id": {
                    "type": "integer",
                    "default": 123456789
                },
                "spent": {
                    "type": "number",
                    "default": 123.45
                }
            }
        },
        "events.AddEventRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "default": "2020-12-31"
                },
                "name": {
<<<<<<< HEAD
                    "type": "string"
=======
                    "type": "string",
                    "default": "Some Event name"
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
                }
            }
        },
        "events.UpdateEventRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "default": "2020-11-30"
                },
                "id": {
                    "type": "integer",
                    "default": 9876543212
                },
                "name": {
                    "type": "string",
                    "default": "Some new Event name"
                }
            }
        },
        "handlers.ErrorResponce": {
            "type": "object",
            "properties": {
                "error": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "persons.AddPersonRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
<<<<<<< HEAD
                    "default": "Test Name"
=======
                    "default": "Some Person name"
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
                }
            }
        },
        "persons.UpdatePersonRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "default": 123456789
                },
                "name": {
                    "type": "string",
                    "default": "Some Person name"
                }
            }
        },
        "personsevents.AddPersonEventRequest": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "default": 987654321
                },
                "factor": {
                    "type": "integer",
                    "default": 1
                },
                "person_id": {
                    "type": "integer",
                    "default": 123456789
                },
                "spent": {
<<<<<<< HEAD
                    "type": "number"
=======
                    "type": "number",
                    "default": 10.25
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
                }
            }
        },
        "personsevents.UpdatePersonEventRequest": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer"
                },
                "factor": {
                    "type": "integer",
                    "default": 1
                },
                "id": {
                    "type": "integer"
                },
                "person_id": {
                    "type": "integer"
                },
                "spent": {
                    "type": "number"
                }
            }
        },
        "service.EventData": {
            "type": "object",
            "properties": {
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
                "all_persons_count": {
                    "type": "integer",
                    "default": 3
                },
                "average_spent": {
                    "type": "number",
                    "default": 33.33
<<<<<<< HEAD
                },
                "event_date": {
                    "type": "string",
                    "default": "2020-12-31"
=======
                },
                "event_date": {
                    "type": "string",
                    "default": "2020-12-31"
=======
                "average": {
                    "type": "number"
                },
                "count": {
                    "type": "integer"
>>>>>>> 9a4ae566fa2b8141fcb08531d73bacef0f5edb34
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
                },
                "event_name": {
                    "type": "string",
                    "default": "Some Event name"
                },
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
                "name": {
                    "type": "string"
                },
>>>>>>> 9a4ae566fa2b8141fcb08531d73bacef0f5edb34
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
                "owes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "number"
                        }
                    }
                },
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
                "round_rate": {
                    "type": "number",
                    "default": 0.01
                },
                "total_spent": {
                    "type": "number",
                    "default": 100
<<<<<<< HEAD
=======
=======
                "roundRate": {
                    "type": "number"
                },
                "total": {
                    "type": "number"
>>>>>>> 9a4ae566fa2b8141fcb08531d73bacef0f5edb34
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Party Cost Calculator API",
	Description:      "This is a sample app server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
