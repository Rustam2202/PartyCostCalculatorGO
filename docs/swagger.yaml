basePath: /
definitions:
  calculation.CalculateRequest:
    properties:
      event_id:
        type: integer
      round:
        type: number
    type: object
  domain.Event:
    properties:
      date:
        description: 'postgres format: `YYYY-MM-DD`'
        type: string
      id:
        type: integer
      name:
        type: string
      persons:
        items:
          $ref: '#/definitions/domain.Person'
        type: array
    type: object
  domain.Person:
    properties:
      events:
        items:
          $ref: '#/definitions/domain.Event'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  domain.PersonsAndEvents:
    properties:
      event:
        $ref: '#/definitions/domain.Event'
      eventId:
        type: integer
      factor:
        type: integer
      id:
        type: integer
      person:
        $ref: '#/definitions/domain.Person'
      personId:
        type: integer
      spent:
        type: number
    type: object
  events.AddEventRequest:
    properties:
      date:
        type: string
      name:
        type: string
    type: object
  events.AddEventResponse:
    properties:
      date:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  events.DeleteEventRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  events.GetEventRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  events.UpdateEventRequest:
    properties:
      date:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  handlers.ErrorResponce:
    properties:
      error: {}
      message:
        type: string
    type: object
  persons.AddPersonRequest:
    properties:
      name:
        type: string
    type: object
  persons.AddPersonResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  persons.DeletePersonRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  persons.GetPersonRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  persons.UpdatePersonRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  personsevents.AddPersonEventRequest:
    properties:
      event_id:
        type: integer
      factor:
        type: integer
      person_id:
        type: integer
      spent:
        type: number
    type: object
  personsevents.DeletePersonEventRequest:
    properties:
      id:
        type: integer
    type: object
  personsevents.GetPersonEventRequest:
    properties:
      event_id:
        type: integer
      person_id:
        type: integer
    type: object
  personsevents.UpdatePersonEventRequest:
    properties:
      event_id:
        type: integer
      factor:
        type: integer
      id:
        type: integer
      person_id:
        type: integer
      spent:
        type: number
    type: object
  service.EventData:
    properties:
      average:
        type: number
      count:
        type: integer
      date:
        type: string
      name:
        type: string
      owes:
        additionalProperties:
          additionalProperties:
            type: number
          type: object
        type: object
      roundRate:
        type: number
      total:
        type: number
    type: object
host: s.cfg.Host:s.cfg.Port
info:
  contact: {}
  description: This is a sample app server.
  title: Party Cost Calculator API
  version: "1.0"
paths:
  /calcEvent:
    get:
      consumes:
      - application/json
      description: Calculate
      parameters:
      - description: Calculate Event Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/calculation.CalculateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.EventData'
        "304":
          description: Not Modified
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Calculate event data by Id
      tags:
      - Calculate
  /event:
    delete:
      consumes:
      - application/json
      description: Delete a event from database
      parameters:
      - description: Delete Event Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/events.DeleteEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "304":
          description: Not Modified
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Delete a event
      tags:
      - Event
    get:
      consumes:
      - application/json
      description: Get a event from database
      parameters:
      - description: Get Event Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/events.GetEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Get a event
      tags:
      - Event
    post:
      consumes:
      - application/json
      description: Add a new event to database
      parameters:
      - description: Add Event Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/events.AddEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/events.AddEventResponse'
        "304":
          description: Not Modified
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Add a event
      tags:
      - Event
    put:
      consumes:
      - application/json
      description: Update a event in database
      parameters:
      - description: Update Event Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/events.UpdateEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Update a event
      tags:
      - Event
  /persEvents:
    delete:
      consumes:
      - application/json
      description: Delete a record of peson existed in event by Id from database
      parameters:
      - description: Delete Person-Event Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/personsevents.DeletePersonEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "304":
          description: Not Modified
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Delete a person-event
      tags:
      - Person-Event
    get:
      consumes:
      - application/json
      description: Get a record of peson existed in event by Id from database
      parameters:
      - description: Get Person-Event Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/personsevents.GetPersonEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.PersonsAndEvents'
        "304":
          description: Not Modified
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Get a person-event
      tags:
      - Person-Event
    post:
      consumes:
      - application/json
      description: Add a new record of peson existed in event by Id to database
      parameters:
      - description: Add Person-Event Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/personsevents.AddPersonEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "304":
          description: Not Modified
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Add a person-event
      tags:
      - Person-Event
    put:
      consumes:
      - application/json
      description: Update a record of peson existed in event by Id from database
      parameters:
      - description: Update Person-Event Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/personsevents.UpdatePersonEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "304":
          description: Not Modified
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Update a person-event
      tags:
      - Person-Event
  /person:
    delete:
      consumes:
      - application/json
      description: Delete a person from database
      parameters:
      - description: Delete Person Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/persons.DeletePersonRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "304":
          description: Not Modified
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Delete a person
      tags:
      - Person
    get:
      consumes:
      - application/json
      description: Get a person from database
      parameters:
      - description: Get Person Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/persons.GetPersonRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Person'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Get a person
      tags:
      - Person
    post:
      consumes:
      - application/json
      description: Add a new person to database
      parameters:
      - description: Add Person Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/persons.AddPersonRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/persons.AddPersonResponse'
        "304":
          description: Not Modified
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Add a person
      tags:
      - Person
    put:
      consumes:
      - application/json
      description: Update a person in database
      parameters:
      - description: Update Person Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/persons.UpdatePersonRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Person'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Update a person
      tags:
      - Person
swagger: "2.0"
