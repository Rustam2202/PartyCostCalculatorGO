basePath: /
definitions:
  calculation.CalculateRequest:
    properties:
      event_id:
        default: 987654321
        type: integer
<<<<<<< HEAD
      round_rate:
        default: 1
=======
<<<<<<< HEAD
      round_rate:
        default: 1
=======
      round:
>>>>>>> 9a4ae566fa2b8141fcb08531d73bacef0f5edb34
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
        type: number
    type: object
  domain.Event:
    properties:
      date:
        default: "2020-12-31"
        type: string
      id:
        default: 987654321
        type: integer
      name:
        default: Some Event name
        type: string
      persons:
        items:
          $ref: '#/definitions/domain.Person'
        type: array
    type: object
  domain.Person:
    properties:
      events:
        items:
          $ref: '#/definitions/domain.Event'
        type: array
      id:
        default: 123456789
        type: integer
      name:
        default: Some Person name
        type: string
    type: object
  domain.PersonsAndEvents:
    properties:
      event:
        $ref: '#/definitions/domain.Event'
      event_id:
        default: 987654321
        type: integer
      factor:
        default: 1
        type: integer
      id:
        default: 9223372036854775807
        type: integer
      person:
        $ref: '#/definitions/domain.Person'
      person_id:
        default: 123456789
        type: integer
      spent:
        default: 123.45
        type: number
    type: object
  events.AddEventRequest:
    properties:
      date:
        default: "2020-12-31"
        type: string
      name:
<<<<<<< HEAD
=======
        default: Some Event name
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
        type: string
    type: object
  events.UpdateEventRequest:
    properties:
      date:
        default: "2020-11-30"
        type: string
      id:
        default: 9876543212
        type: integer
      name:
        default: Some new Event name
        type: string
    type: object
  handlers.ErrorResponce:
    properties:
      error: {}
      message:
        type: string
    type: object
  persons.AddPersonRequest:
    properties:
      name:
<<<<<<< HEAD
        default: Test Name
=======
        default: Some Person name
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
        type: string
    type: object
  persons.UpdatePersonRequest:
    properties:
      id:
        default: 123456789
        type: integer
      name:
        default: Some Person name
        type: string
    type: object
  personsevents.AddPersonEventRequest:
    properties:
      event_id:
        default: 987654321
        type: integer
      factor:
        default: 1
        type: integer
      person_id:
        default: 123456789
        type: integer
      spent:
        default: 10.25
        type: number
    type: object
  personsevents.UpdatePersonEventRequest:
    properties:
      event_id:
        type: integer
      factor:
        default: 1
        type: integer
      id:
        type: integer
      person_id:
        type: integer
      spent:
        type: number
    type: object
  service.EventData:
    properties:
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
      all_persons_count:
        default: 3
        type: integer
      average_spent:
        default: 33.33
        type: number
      event_date:
        default: "2020-12-31"
<<<<<<< HEAD
=======
=======
      average:
        type: number
      count:
        type: integer
      date:
>>>>>>> 9a4ae566fa2b8141fcb08531d73bacef0f5edb34
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
        type: string
      event_name:
        default: Some Event name
        type: string
      owes:
        additionalProperties:
          additionalProperties:
            type: number
          type: object
        type: object
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
      round_rate:
        default: 0.01
        type: number
      total_spent:
        default: 100
<<<<<<< HEAD
=======
=======
      roundRate:
        type: number
      total:
>>>>>>> 9a4ae566fa2b8141fcb08531d73bacef0f5edb34
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
        type: number
    type: object
info:
  contact: {}
  description: This is a sample app server.
  title: Party Cost Calculator API
  version: "1.0"
paths:
  /calcEvent:
    get:
      consumes:
      - application/json
      parameters:
      - description: Calculate Event Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/calculation.CalculateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.EventData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Calculate event data by Id
      tags:
      - Calculate
  /event:
    post:
      consumes:
      - application/json
      description: Add a new event to database
      parameters:
      - description: Add Event Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/events.AddEventRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Add a event
      tags:
      - Event
    put:
      consumes:
      - application/json
      description: Update a event in database
      parameters:
      - description: Update Event Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/events.UpdateEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/events.UpdateEventRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Update a event
      tags:
      - Event
  /event/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a event from database
      parameters:
      - description: Event Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Delete a event
      tags:
      - Event
    get:
      consumes:
      - application/json
      description: Get a event from database
      parameters:
      - description: Event Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Get a event
      tags:
      - Event
  /persEvents:
    post:
      consumes:
      - application/json
      description: Add a new record of peson existed in event to database
      parameters:
      - description: Add Person-Event Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/personsevents.AddPersonEventRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.PersonsAndEvents'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Add a person-event
      tags:
      - Person-Event
    put:
      consumes:
      - application/json
      description: Update a record of peson-event data
      parameters:
      - description: Update Person-Event Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/personsevents.UpdatePersonEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/personsevents.UpdatePersonEventRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Update a person-event
      tags:
      - Person-Event
  /persEvents/{event_id}:
    get:
      consumes:
      - application/json
      description: Get an array of peson-event records by EventId
      parameters:
      - description: Event Id
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.PersonsAndEvents'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Get a persons-event
      tags:
      - Person-Event
  /persEvents/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a record of peson existed in event by Id from database
      parameters:
      - description: Event Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Delete a person-event
      tags:
      - Person-Event
  /person:
    post:
      consumes:
      - application/json
      description: Add a new person to database
      parameters:
      - description: Add Person Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/persons.AddPersonRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Person'
<<<<<<< HEAD
        "304":
          description: Not Modified
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
=======
>>>>>>> 6ac41b8b2df6ba7d50fe6a89162d1df4f6235a25
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Add a person
      tags:
      - Person
    put:
      consumes:
      - application/json
      description: Update a person in database
      parameters:
      - description: Update Person Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/persons.UpdatePersonRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/persons.UpdatePersonRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Update a person
      tags:
      - Person
  /person/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a person from database
      parameters:
      - description: Person Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Delete a person
      tags:
      - Person
    get:
      consumes:
      - application/json
      description: Get a person from database
      parameters:
      - description: Person Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Person'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Get a person
      tags:
      - Person
swagger: "2.0"
