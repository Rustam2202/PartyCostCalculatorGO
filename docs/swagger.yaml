definitions:
  domain.Event:
    properties:
      date:
        description: 'postgres format: `YYYY-MM-DD`'
        type: string
      id:
        type: integer
      name:
        type: string
      persons:
        description: PersonIds []int64
        items:
          $ref: '#/definitions/domain.Person'
        type: array
    type: object
  domain.Person:
    properties:
      events:
        description: EventIds []int64
        items:
          $ref: '#/definitions/domain.Event'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  handlers.ErrorResponce:
    properties:
      error: {}
      message:
        type: string
    type: object
  persons.AddPersonRequest:
    properties:
      name:
        type: string
    type: object
  persons.AddPersonResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  persons.DeletePersonRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  persons.GetPersonRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  persons.UpdatePersonRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Party Cost Calculator API
  version: "1.0"
paths:
  /person:
    delete:
      consumes:
      - application/json
      description: Delete a person from database
      parameters:
      - description: Delete Person Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/persons.DeletePersonRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "304":
          description: Not Modified
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Delete a person
      tags:
      - Person
    get:
      consumes:
      - application/json
      description: Get a person from database
      parameters:
      - description: Get Person Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/persons.GetPersonRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Person'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Get a person
      tags:
      - Person
    post:
      consumes:
      - application/json
      description: Add a new person to database
      parameters:
      - description: Add Person Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/persons.AddPersonRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/persons.AddPersonResponse'
        "304":
          description: Not Modified
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Add a person
      tags:
      - Person
    put:
      consumes:
      - application/json
      description: Update a person in database
      parameters:
      - description: Update Person Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/persons.UpdatePersonRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Person'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponce'
      summary: Update a person
      tags:
      - Person
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
